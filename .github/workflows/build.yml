name: build

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: Set variables
      id: setup
      run: |
        COMMIT_NUM=$(git rev-list --count HEAD)
        COMMIT_HASH=$(git rev-parse --short HEAD)
        VERSION=$(jq -r .version update.json)
        ZIP_NAME=SAN_$VERSION-$COMMIT_NUM-$COMMIT_HASH

        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

    - name: Create dummy zip
      run: |
        cd module/dummy_zip
        cp -r ../META-INF .
        zip -r dummy.zip *
        mv dummy.zip ../
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ZIP_NAME }}
        path: |
          module/
          !module/dummy_zip

    - name: Validate release
      run: |
        git fetch --tags
        if git tag | grep -qx "^${{ env.VERSION }}"; then
          echo "RELEASE=false" >> $GITHUB_OUTPUT
        else
          echo "RELEASE=true" >> $GITHUB_OUTPUT
        fi

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.RELEASE == 'true' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Read update.json
      id: setup
      run: |
        echo "VERSION=$(jq -r .version update.json)" >> $GITHUB_ENV
        echo "ZIP_NAME=$(basename $(jq -r .zipUrl update.json))" >> $GITHUB_ENV

    - name: Read changelog
      run: |
        CHANGELOG=$(git diff HEAD^ HEAD -- CHANGELOG.md | grep '^+[^+]' | sed 's/^+//; /---/d')
        echo "CHANGELOG<<CHANGELOG_EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "CHANGELOG_EOF" >> $GITHUB_ENV

    - name: Update dependency
      run: |
        curl -Ls https://raw.githubusercontent.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/main/resources/assets/uad_lists.json > module/uad_lists.json

        # Push commit if found changes
        if ! git diff --exit-code module/uad_lists.json > /dev/null; then
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add module/uad_lists.json
          git commit -m "deps: update uad_lists.json"
          git push
        fi

    - name: Create dummy zip
      run: |
        cd module/dummy_zip
        cp -r ../META-INF .
        zip -r dummy.zip *
        mv dummy.zip ../

    - name: Create module zip
      run: |
        cd module
        zip -r "${{ env.ZIP_NAME }}" *

    - name: Create release
      if: env.RELEASE == 'true'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: "${{ env.VERSION }}"
        name: "${{ env.VERSION }}"
        body: "${{ env.CHANGELOG }}"
        draft: false
        files: "module/${{ env.ZIP_NAME }}" 